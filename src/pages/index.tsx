import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';

import { gql, useQuery } from '@apollo/client';
import { ArcElement, Chart as ChartJS, Legend, Tooltip } from 'chart.js';
import { useMemo } from 'react';
import { Doughnut } from 'react-chartjs-2';

ChartJS.register(ArcElement, Tooltip, Legend);

export const data = {
  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
  datasets: [
    {
      label: 'Requests',
      data: [12, 19, 3, 5, 2, 3],
      backgroundColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
      ],
      borderColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
      ],
      borderWidth: 1
    }
  ]
};

const Home: NextPage = () => {
  const totalArtists = useQuery(gql`
    query {
      listArtists(take: 50, skip: 1, order: DESC) {
        totalCount
      }
    }
  `);

  const totalAlbums = useQuery(gql`
    query {
      listAlbums(take: 50, skip: 1, order: DESC) {
        totalCount
      }
    }
  `);

  const totalPlaylists = useQuery(gql`
    query {
      listPlaylists(take: 50, skip: 1, order: DESC) {
        totalCount
      }
    }
  `);

  const totalTracks = useQuery(gql`
    query {
      listTracks(take: 50, skip: 1, order: DESC) {
        totalCount
      }
    }
  `);

  const total = useMemo(() => {
    return {
      artists: totalArtists?.data?.listArtists?.totalCount ?? 0,
      albums: totalAlbums?.data?.listAlbums?.totalCount ?? 0,
      playlists: totalPlaylists?.data?.listPlaylists?.totalCount ?? 0,
      tracks: totalTracks?.data?.listTracks?.totalCount ?? 0
    };
  }, [totalArtists, totalAlbums, totalPlaylists, totalTracks]);

  // console.log(totalArtists?.data?.listArtists?.totalCount);
  return (
    <div className={styles.container}>
      <Head>
        <title>RhythmMusic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        style={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
          height: '100vh',
          overflow: 'none'
        }}
      >
        <h1>RhythmMusic</h1>
        <h3>_WhiL</h3>

        <div
          style={{
            position: 'relative',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center'
          }}
        >
          <h3
            style={{
              top: 0,
              left: 0,
              right: 0,
              bottom: 0,
              width: 100,
              height: 100
            }}
          >
            TOTAL <br />
            {Object.values(total)
              ?.reduce((acc, curr) => acc + curr, 0)
              ?.toFixed(2)
              .replace(/\B(?=(\d{3})+(?!\d))/g, `,`)}
          </h3>
          <Doughnut
            data={{
              labels: Object.keys(total),
              datasets: [
                {
                  label: 'Requests',
                  data: Object.values(total),
                  backgroundColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                  ],
                  borderColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                  ],
                  borderWidth: 1
                }
              ]
            }}
            style={{
              height: 480,
              width: 480
            }}
          />
        </div>
      </div>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
